#include <stdio.h>
#include <stdlib.h>

int optimalMerge(int files[], int n) {
	int temp, mincost = 0, merge, i, j, k1, k2;
	for(i = 0; i < (n-1); i++)
	{
		for(j = 0; j < (n-i-1); j++)
		{
			if(files[j] > files[j+1])
			{
				temp = files[j];
				files[j] = files[j+1];
				files[j+1] = temp;
			}
		}
	}
	while(n > 1)
	{
		k1 = 0;
		k2 = 1;
		if(files[k2] < files[k1])
		{
			temp = files[k1];
			files[k1] = files[k2];
			files[k2] = temp;
		}
		for(i = 2; i < n; i++)
		{
			if(files[i] < files[k1])
			{
				k2= k1;
				k1 = i;
			}
			else if(files[i] < files[k2])
			{
				k2 = i;
			}
		}
		merge = files[k1] + files[k2];
		mincost += merge;
		files[k1] = merge;
		for(i = k2 +1; i < n; i++)
		{
			files[i-1] = files[i];
		}
		n--;
	}
	return mincost;
}

int main() {
	int n;
	printf("Number of files: ");
	scanf("%d", &n);
	int *files = (int *)malloc(n * sizeof(int));
	printf("Enter the sizes of %d files: ", n);
	for (int i = 0; i < n; i++) {
		scanf("%d", &files[i]);
	}
	int minCost = optimalMerge(files, n);
	printf("Minimum cost of merging is: %d\n", minCost);
	free(files);
	return 0;
}
